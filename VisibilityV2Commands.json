{
    "metadata": {
        "dictionary_name": "Visibility",
        "version": "1.0.0",
        "created_by": "IO01",
        "create_time": "",
        "last_update": "",
        "description": "This dictionary facilitates network and device visibility through various scans, detections, and retrieval commands.",
        "tags": ["network", "visibility", "discovery", "scanning"],
        "keywords": ["arp scan", "ping sweep", "OS detection", "port scanning", "device metrics", "network interfaces"],
        "license": "",
        "source_repository": "",
        "documentation_url": ""
    },
    
    "requirements": {
        "pre_installed_tools": ["curl", "nmap", "python3", "tshark", "ifconfig", "dig", "yara", "trivy", "picocom"],
        "libraries": [],
        "scripts": [
            "./io01_update.sh",
            "./third_party/self_discover.sh",
            "./third_party/passive_scan_sniff.sh",
            "./third_party/nmapio_arp.sh",
            "./third_party/pingSweep.sh",
            "./third_party/ports_scan.sh",
            "./third_party/get_info_cpsx.sh",
            "./third_party/OSdetect.sh",
            "./third_party/get_cpe_name.py",
            "./third_party/simplechat.py",
            "./third_party/ragChat.py",
            "./third_party/getEncryptedTraffic.py",
            "./third_party/get_cve_by_cpe.sh",
            "./third_party/inspectTraffic.py",
            "./third_party/getVendorFromCVE.sh",
            "./third_party/getNCM.py",
            "./third_party/sniffer.py",
            "./third_party/network_interfaces_ifconfig.sh"
        ]
    },

    "io01_ver": {
        "aliases": [],
        "type": "run",
        "desc": "Show kadabra commands help",
        "cmd": "echo Visibility 1.0.6"
    },
    "io01_update": {
        "aliases": [],
        "type": "run",
        "desc": "Update kadabra",
        "cmd": "sh ./io01_update.sh"
    },
    "self_discover": {
        "aliases": [],
        "type": "run",
        "desc": "Detects local network interfaces, internal IP address, external IP address, and gateways",
        "cmd": "sudo ./third_party/self_discover.sh"
    },
    "passive_scan": {
        "aliases": [],
        "type": "run",
        "desc": "Sniff local network [interface] for a [duration] and provides basic information",
        "cmd": "sudo ./third_party/passive_scan_sniff.sh"
    },
    "arp_scan": {
        "aliases": [],
        "type": "run",
        "desc": "Use ARP scan to map [network]",
        "cmd": "./third_party/nmapio_arp.sh"
    },
    "pingSweep": {
        "aliases": [],
        "type": "run",
        "desc": "Ping Sweep Discovery",
        "cmd": "./third_party/pingSweep.sh"
    },
    "get_ports": {
        "aliases": [],
        "type": "run",
        "desc": "Port scan a network. Usage: get_ports <target_network>",
        "cmd": "sudo ./third_party/ports_scan.sh"
    },
    "get_port_info": {
        "aliases": [],
        "type": "run",
        "desc": "Get port info [target_ip] [target_port] [protocol]",
        "cmd": "sudo ./third_party/get_info_cpsx.sh"
    },
    "OSdetect": {
        "aliases": [],
        "type": "run",
        "desc": "OS detection [target_ip]",
        "cmd": "sudo ./third_party/OSdetect.sh"
    },
    "IPinfo": {
        "aliases": [],
        "type": "run",
        "desc": "IP information retrieval",
        "cmd": "curl -s https://ipinfo.io/"
    },
    "getCPE": {
        "aliases": [],
        "type": "run",
        "desc": "TCP SysInfo Discovery: TCP fingerprint [target_ip]",
        "cmd": "sudo nmap -sV -O"
    },
    "get_mitre_ics": {
        "aliases": [],
        "type": "run",
        "desc": "Display MITRE ICS attack data",
        "cmd": "cat ./data/upload/ics-attack.json"
    },
    "get_ports_commands": {
        "aliases": [],
        "type": "run",
        "desc": "Display port list",
        "cmd": "cat ./data/upload/port_list.json"
    },
    "get_cpe_name": {
        "aliases": [],
        "type": "run",
        "desc": "Retrieve CPE name",
        "cmd": "python3 ./third_party/get_cpe_name.py"
    },
    "chat": {
        "aliases": [],
        "type": "interactive",
        "desc": "Ask anything - simple chat",
        "cmd": "python3 ./third_party/simplechat.py"
    },
    "RAGchat": {
        "aliases": [],
        "type": "interactive",
        "desc": "Ask anything - Retrieval Augmented Generation (RAG)",
        "cmd": "python3 ./third_party/ragChat.py"
    },
    "getTraffic": {
        "aliases": [],
        "type": "run",
        "desc": "Get traffic info <duration>",
        "cmd": "sudo python3 ./third_party/getEncryptedTraffic.py"
    },
    "getCVE": {
        "aliases": [],
        "type": "run",
        "desc": "Retrieve CVEs from NATIONAL VULNERABILITY DATABASE, params <cpeName>",
        "cmd": "sudo ./third_party/get_cve_by_cpe.sh"
    },
    "InspectTraffic": {
        "aliases": [],
        "type": "interactive",
        "desc": "Inspect Modbus and SIP Traffic",
        "cmd": "sudo python3 ./third_party/inspectTraffic.py"
    },
    "GetVendor": {
        "aliases": [],
        "type": "run",
        "desc": "Retrieve Vendor from MAC address <MAC>",
        "cmd": "sudo ./third_party/getVendorFromCVE.sh"
    },
    "getNCM": {
        "aliases": [],
        "type": "run",
        "desc": "Retrieve Vendor from MAC address <MAC>",
        "cmd": "sudo python3 ./third_party/getNCM.py"
    },
    "tshark": {
        "aliases": [],
        "type": "run",
        "desc": "Capture real-time traffic using tshark",
        "cmd": "tshark -l -T json -i any -V"
    },
    "lsUSB": {
        "aliases": [],
        "type": "run",
        "desc": "Retrieve USB device information",
        "cmd": "udevadm info --query=all --name=/dev/ttyUSB0"
    },
    "picocom": {
        "aliases": [],
        "type": "interactive",
        "desc": "Picocom serial communication -b 115200",
        "cmd": "sudo picocom /dev/ttyUSB0 -b 115200 -c"
    },
    "localOSimage": {
        "aliases": [],
        "type": "run",
        "desc": "Retrieve OS details",
        "cmd": "lsb_release -a"
    },
    "sniff": {
        "aliases": [],
        "type": "run",
        "desc": "Sniff traffic into PCAP file. Params <network_interface> <output_pcap_file> <number_of_packets>",
        "cmd": "sudo python3 ./third_party/sniffer.py"
    },
    "ifconfig": {
        "aliases": [],
        "type": "run",
        "desc": "View local network interfaces",
        "cmd": "sudo ifconfig"
    },
    "getInterfaces": {
        "aliases": [],
        "type": "run",
        "desc": "Discover network interfaces",
        "cmd": "sudo ./third_party/network_interfaces_ifconfig.sh"
    },
    "S7-scan": {
        "aliases": [],
        "type": "run",
        "desc": "OT Network Service Scan for Siemens SIMATIC S7 PLCs <target_ip_block>",
        "cmd": "sudo nmap -Pn -sT -p102 --script s7-info"
    },
    "modbus-scan-na": {
        "aliases": [],
        "type": "run",
        "desc": "Non-aggressive Modbus scan <target_ip>",
        "cmd": "sudo nmap -Pn -sT -p502 --script modbus-discover"
    },
    "enip-scan": {
        "aliases": [],
        "type": "run",
        "desc": "OT SysInfo Discovery for ENIP <target_ip>",
        "cmd": "sudo nmap -Pn -sU -p44818 --script enip-info"
    },
    "modbus-scan-ag": {
        "aliases": [],
        "type": "run",
        "desc": "Aggressive Modbus scan <target_ip>",
        "cmd": "sudo nmap -sT -Pn -p502 --script modbus-discover --script-args modbus-discover.aggressive=true"
    },
    "bacnet-scan": {
        "aliases": [],
        "type": "run",
        "desc": "BACnet scan <target_ip>",
        "cmd": "sudo nmap -Pn -sU -p47808 --script bacnet-info"
    },
    "omron-scan-sU": {
        "aliases": [],
        "type": "run",
        "desc": "Omron PLC Device scan UDP <target_ip>",
        "cmd": "sudo nmap -Pn -sU -p9600 --script omron-info"
    },
    "omron-scan-sT": {
        "aliases": [],
        "type": "run",
        "desc": "Omron PLC Device scan TCP <target_ip>",
        "cmd": "sudo nmap -Pn -sT -p9600 --script omron-info"
    },
    "dig": {
        "aliases": [],
        "type": "run",
        "desc": "DNS lookup using dig",
        "cmd": "sudo dig"
    },
    "yara": {
        "aliases": [],
        "type": "run",
        "desc": "Run yara for rule-based detection",
        "cmd": "sudo yara"
    },
    "trivy": {
        "aliases": [],
        "type": "run",
        "desc": "Run trivy vulnerability scanner",
        "cmd": "sudo trivy"
    },
    "curl": {
        "aliases": [],
        "type": "run",
        "desc": "Perform HTTP requests with curl",
        "cmd": "sudo curl"
    }
}
